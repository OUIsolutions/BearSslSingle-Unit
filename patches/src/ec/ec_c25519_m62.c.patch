25c25
< #include "inner.h"
---
> 
33c33
< static const unsigned char GEN[] = {
---
> static const unsigned char BEAR_SINGLE_UNITY_FILEGEN[] = {
40c40
< static const unsigned char ORDER[] = {
---
> static const unsigned char BEAR_SINGLE_UNITY_FILEORDER[] = {
48c48
< api_generator(int curve, size_t *len)
---
> BEAR_SINGLE_UNITY_FILEapi_generator(int curve, size_t *len)
52c52
< 	return GEN;
---
> 	return BEAR_SINGLE_UNITY_FILEGEN;
56c56
< api_order(int curve, size_t *len)
---
> BEAR_SINGLE_UNITY_FILEapi_order(int curve, size_t *len)
60c60
< 	return ORDER;
---
> 	return BEAR_SINGLE_UNITY_FILEORDER;
64c64
< api_xoff(int curve, size_t *len)
---
> BEAR_SINGLE_UNITY_FILEapi_xoff(int curve, size_t *len)
83c83
< f255_cswap(uint64_t *a, uint64_t *b, uint32_t ctl)
---
> BEAR_SINGLE_UNITY_FILEf255_BEAR_SINGLE_UNITY_FILEcswap(uint64_t *a, uint64_t *b, uint32_t ctl)
99c99
< f255_add(uint64_t *d, const uint64_t *a, const uint64_t *b)
---
> BEAR_SINGLE_UNITY_FILEf255_add(uint64_t *d, const uint64_t *a, const uint64_t *b)
116c116
< f255_sub(uint64_t *d, const uint64_t *a, const uint64_t *b)
---
> BEAR_SINGLE_UNITY_FILEf255_sub(uint64_t *d, const uint64_t *a, const uint64_t *b)
190c190
< f255_mul(uint64_t *d, uint64_t *a, uint64_t *b)
---
> BEAR_SINGLE_UNITY_FILEf255_mul(uint64_t *d, uint64_t *a, uint64_t *b)
285c285
< f255_mul_a24(uint64_t *d, const uint64_t *a)
---
> BEAR_SINGLE_UNITY_FILEf255_mul_a24(uint64_t *d, const uint64_t *a)
337c337
< f255_final_reduce(uint64_t *a)
---
> BEAR_SINGLE_UNITY_FILEf255_final_reduce(uint64_t *a)
376c376
< api_mul(unsigned char *G, size_t Glen,
---
> BEAR_SINGLE_UNITY_FILEapi_mul(unsigned char *G, size_t Glen,
435,436c435,436
< 		f255_cswap(x2, x3, swap);
< 		f255_cswap(z2, z3, swap);
---
> 		BEAR_SINGLE_UNITY_FILEf255_BEAR_SINGLE_UNITY_FILEcswap(x2, x3, swap);
> 		BEAR_SINGLE_UNITY_FILEf255_BEAR_SINGLE_UNITY_FILEcswap(z2, z3, swap);
443,446c443,446
< 		 * Each f255_add() adds one bit to the maximum range of
< 		 * the values, but f255_sub() and f255_mul() bring back
< 		 * the limbs into 52 bits. All f255_add() outputs are
< 		 * used only as inputs for f255_mul(), which ensures
---
> 		 * Each BEAR_SINGLE_UNITY_FILEf255_add() adds one bit to the maximum range of
> 		 * the values, but BEAR_SINGLE_UNITY_FILEf255_sub() and BEAR_SINGLE_UNITY_FILEf255_mul() bring back
> 		 * the limbs into 52 bits. All BEAR_SINGLE_UNITY_FILEf255_add() outputs are
> 		 * used only as inputs for BEAR_SINGLE_UNITY_FILEf255_mul(), which ensures
451c451
< 		f255_add(a, x2, z2);
---
> 		BEAR_SINGLE_UNITY_FILEf255_add(a, x2, z2);
454c454
< 		f255_mul(aa, a, a);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(aa, a, a);
457c457
< 		f255_sub(b, x2, z2);
---
> 		BEAR_SINGLE_UNITY_FILEf255_sub(b, x2, z2);
460c460
< 		f255_mul(bb, b, b);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(bb, b, b);
463c463
< 		f255_sub(e, aa, bb);
---
> 		BEAR_SINGLE_UNITY_FILEf255_sub(e, aa, bb);
466c466
< 		f255_add(c, x3, z3);
---
> 		BEAR_SINGLE_UNITY_FILEf255_add(c, x3, z3);
469c469
< 		f255_sub(d, x3, z3);
---
> 		BEAR_SINGLE_UNITY_FILEf255_sub(d, x3, z3);
472c472
< 		f255_mul(da, d, a);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(da, d, a);
475c475
< 		f255_mul(cb, c, b);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(cb, c, b);
478,479c478,479
< 		f255_add(x3, da, cb);
< 		f255_mul(x3, x3, x3);
---
> 		BEAR_SINGLE_UNITY_FILEf255_add(x3, da, cb);
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x3, x3, x3);
482,484c482,484
< 		f255_sub(z3, da, cb);
< 		f255_mul(z3, z3, z3);
< 		f255_mul(z3, x1, z3);
---
> 		BEAR_SINGLE_UNITY_FILEf255_sub(z3, da, cb);
> 		BEAR_SINGLE_UNITY_FILEf255_mul(z3, z3, z3);
> 		BEAR_SINGLE_UNITY_FILEf255_mul(z3, x1, z3);
487c487
< 		f255_mul(x2, aa, bb);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x2, aa, bb);
490,492c490,492
< 		f255_mul_a24(z2, e);
< 		f255_add(z2, aa, z2);
< 		f255_mul(z2, e, z2);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul_a24(z2, e);
> 		BEAR_SINGLE_UNITY_FILEf255_add(z2, aa, z2);
> 		BEAR_SINGLE_UNITY_FILEf255_mul(z2, e, z2);
495,496c495,496
< 	f255_cswap(x2, x3, swap);
< 	f255_cswap(z2, z3, swap);
---
> 	BEAR_SINGLE_UNITY_FILEf255_BEAR_SINGLE_UNITY_FILEcswap(x2, x3, swap);
> 	BEAR_SINGLE_UNITY_FILEf255_BEAR_SINGLE_UNITY_FILEcswap(z2, z3, swap);
504,505c504,505
< 		f255_mul(x1, x1, x1);
< 		f255_mul(x1, x1, z2);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x1, x1, x1);
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x1, x1, z2);
512c512
< 			f255_mul(x3, x3, x3);
---
> 			BEAR_SINGLE_UNITY_FILEf255_mul(x3, x3, x3);
514c514
< 		f255_mul(x3, x3, x1);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x3, x3, x1);
517c517
< 		f255_mul(x3, x3, x3);
---
> 		BEAR_SINGLE_UNITY_FILEf255_mul(x3, x3, x3);
519c519
< 			f255_mul(x3, z2, x3);
---
> 			BEAR_SINGLE_UNITY_FILEf255_mul(x3, z2, x3);
526,527c526,527
< 	f255_mul(x2, x2, x3);
< 	f255_final_reduce(x2);
---
> 	BEAR_SINGLE_UNITY_FILEf255_mul(x2, x2, x3);
> 	BEAR_SINGLE_UNITY_FILEf255_final_reduce(x2);
545c545
< api_mulgen(unsigned char *R,
---
> BEAR_SINGLE_UNITY_FILEapi_mulgen(unsigned char *R,
551c551
< 	G = api_generator(curve, &Glen);
---
> 	G = BEAR_SINGLE_UNITY_FILEapi_generator(curve, &Glen);
553c553
< 	api_mul(R, Glen, x, xlen, curve);
---
> 	BEAR_SINGLE_UNITY_FILEapi_mul(R, Glen, x, xlen, curve);
558c558
< api_muladd(unsigned char *A, const unsigned char *B, size_t len,
---
> BEAR_SINGLE_UNITY_FILEapi_muladd(unsigned char *A, const unsigned char *B, size_t len,
581,586c581,586
< 	&api_generator,
< 	&api_order,
< 	&api_xoff,
< 	&api_mul,
< 	&api_mulgen,
< 	&api_muladd
---
> 	&BEAR_SINGLE_UNITY_FILEapi_generator,
> 	&BEAR_SINGLE_UNITY_FILEapi_order,
> 	&BEAR_SINGLE_UNITY_FILEapi_xoff,
> 	&BEAR_SINGLE_UNITY_FILEapi_mul,
> 	&BEAR_SINGLE_UNITY_FILEapi_mulgen,
> 	&BEAR_SINGLE_UNITY_FILEapi_muladd
